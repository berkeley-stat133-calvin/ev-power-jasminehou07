---
title: "EV Power - Lab 4 Project Report"
format: typst
---

# Example Solution 1

## **Part 0: libraries**

```{r}
library("stringr")
library("dplyr")
library("tidyverse")

```

## **Part 1:** **Defining Research Question**

Chosen Question: Do states with higher renewable energy usage tend to have more electric vehicle (EV) registrations?

## **Part 2: Data Preparation and Cleaning**

```{r}
setwd("~/Downloads/school/STAT 133/ev-power-jasminehou07/data") 
# AV ENERGY DATA
AvgEnergyPrice <- read.csv("av-energy-price-2021-2023.csv")

# convert to tibble
AvgEnergyPrice <- tibble(col = AvgEnergyPrice[[1]])

# delete the first two junk lines
AvgEnergyPrice <- AvgEnergyPrice[-c(1,2), ]

# remove the outer quotes from each line
AvgEnergyPrice <- AvgEnergyPrice %>%
  mutate(col = str_remove_all(col, '^"|"$'))

# split the single column into 4 columns
AvgEnergyPrice <- AvgEnergyPrice %>%
  separate("col", into = c("State", "Avgprice_2021", "Avgprice_2022", "Avgprice_2023"), sep = ",") %>%
  mutate(across(everything(), str_trim))

# clean numbers, keep only digits and decimal points
AvgEnergyPrice <- AvgEnergyPrice %>%
  mutate(across(starts_with("Avgprice_"),
                ~ str_replace_all(.x, "[^0-9.]", "") %>%
                  as.numeric()))

# change state abbreviations to full names but ignore the last row
AvgEnergyPrice <- AvgEnergyPrice %>%
  mutate(State = if_else(
    row_number() == n(), State, state.name[match(State, state.abb)]
  ))

# create csv file
write_csv(AvgEnergyPrice, "AvgEnergyPrice.csv")

# EV REGISTRATION DATA
#skip first 2 lines since they dont have data
EV_Registrations <- read.csv("ev-registrations-by-state-2023.csv", skip = 2)

#convert to tibble
EV_Registrations <- as_tibble(EV_Registrations)

# rename columns
colnames(EV_Registrations) <- c("State", "Registrations")

#fix random characters
EV_Registrations <- EV_Registrations %>%
  mutate(across("Registrations",
                ~ str_replace_all(.x, "[^0-9.]", "") %>%
                  as.numeric()))

#create csv file
write_csv(EV_Registrations, "EV_Registrations.csv")

#RENEWABLE USE 2021 DATA
Renewable_Use2021 <- read.csv("renew-use-2021.csv")

# convert to tibble
Renewable_Use2021 <- as_tibble(Renewable_Use2021)

# rename columns
colnames(Renewable_Use2021)[3] <- "Usage"

# clean numbers, keep only digits and decimal points
Renewable_Use2021 <- Renewable_Use2021 %>%
  mutate(across("Usage",
                ~ str_replace_all(.x, "[^0-9.]", "") %>%
                  as.numeric()))

# change state abbreviations to full names but ignore last 5 rows
Renewable_Use2021 <- Renewable_Use2021 %>%
  mutate(State = if_else(
    row_number() > n() - 5, State, state.name[match(State, state.abb)]
  ))

# create csv file
write_csv(Renewable_Use2021, "Renewable_Use2021.csv")

#RENEWABLE USE 2022 DATA
Renewable_Use2022 <- read.csv("renew-use-2022.csv")

# convert to tibble
Renewable_Use2022 <- as_tibble(Renewable_Use2022)

# rename columns
colnames(Renewable_Use2022)[3] <- "Usage"

# clean numbers, keep only digits and decimal points
Renewable_Use2021 <- Renewable_Use2021 %>%
  mutate(across("Usage",
                ~ str_replace_all(.x, "[^0-9.]", "") %>%
                  as.numeric()))

# change state abbreviations to full names but ignore last 5 rows
Renewable_Use2022 <- Renewable_Use2022 %>%
  mutate(State = if_else(
    row_number() > n() - 5, State, state.name[match(State, state.abb)]
  ))

# create csv file
write_csv(Renewable_Use2021, "Renewable_Use2022.csv")

#RENEWABLE USE 2023 DATA
Renewable_Use2023 <- read.csv("renew-use-2023.csv")

# convert to tibble
Renewable_Use2023 <- as_tibble(Renewable_Use2023)

# rename columns
colnames(Renewable_Use2023)[3] <- "Usage"

# clean numbers, keep only digits and decimal points
Renewable_Use2023 <- Renewable_Use2023 %>%
  mutate(across("Usage",
                ~ str_replace_all(.x, "[^0-9.]", "") %>%
                  as.numeric()))

#turn state abbreviations to uppercase
Renewable_Use2023 <- Renewable_Use2023 %>%
  mutate(State = toupper(State))

# change state abbreviations to full names but ignore last 5 rows
Renewable_Use2023 <- Renewable_Use2023 %>%
  mutate(State = if_else(
    row_number() > n() - 5, State, state.name[match(State, state.abb)]
  ))

# create csv file
write_csv(Renewable_Use2023, "Renewable_Use2023.csv")
```

## **Part 3: Joining / Pivoting Datasets for Analysis**

```{r}

```

## **Part 4: Mapping Visualization**

```{r}

```